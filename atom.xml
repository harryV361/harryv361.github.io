<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>haryV的博客</title>
  <subtitle>这是副标题</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-07-18T07:34:41.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>harryV</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>spring cloud config</title>
    <link href="http://yoursite.com/2017/06/20/spring%20cloud%20config/"/>
    <id>http://yoursite.com/2017/06/20/spring cloud config/</id>
    <published>2017-06-20T07:14:22.000Z</published>
    <updated>2017-07-18T07:34:41.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-简介：spring-cloud-config是一个分布式的配置中心，集中的来管理所有环境的配置文件，默认使用git来存储，也可以支持svn、本地文件等方式。它分为两个部分：server和client"><a href="#1-简介：spring-cloud-config是一个分布式的配置中心，集中的来管理所有环境的配置文件，默认使用git来存储，也可以支持svn、本地文件等方式。它分为两个部分：server和client" class="headerlink" title="1. 简介：spring cloud config是一个分布式的配置中心，集中的来管理所有环境的配置文件，默认使用git来存储，也可以支持svn、本地文件等方式。它分为两个部分：server和client"></a>1. 简介：spring cloud config是一个分布式的配置中心，集中的来管理所有环境的配置文件，默认使用git来存储，也可以支持svn、本地文件等方式。它分为两个部分：server和client</h2><pre><code>* config-server 服务端，配置中心
* config-client 客户端，客户端调用server端暴露接口获取配置信息
</code></pre><h2 id="2-搭建配置中心"><a href="#2-搭建配置中心" class="headerlink" title="2. 搭建配置中心"></a>2. 搭建配置中心</h2><h3 id="a-创建子工程spring-cloud-config-server"><a href="#a-创建子工程spring-cloud-config-server" class="headerlink" title="a. 创建子工程spring-cloud-config-server"></a>a. 创建子工程spring-cloud-config-server</h3><h3 id="b-在子工程的build-gradle文件中加入依赖："><a href="#b-在子工程的build-gradle文件中加入依赖：" class="headerlink" title="b.在子工程的build.gradle文件中加入依赖："></a>b.在子工程的build.gradle文件中加入依赖：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">dependencies &#123;</div><div class="line">    compile &apos;org.springframework.boot:spring-boot-starter-actuator&apos;</div><div class="line">    compile &apos;org.springframework.cloud:spring-cloud-starter-config&apos;</div><div class="line">    compile &apos;org.springframework.cloud:spring-cloud-config-server&apos;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="c-创建启动主类"><a href="#c-创建启动主类" class="headerlink" title="c.创建启动主类"></a>c.创建启动主类</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">@SpringBootApplication</div><div class="line">@EnableConfigServer</div><div class="line">public class Application &#123;</div><div class="line"></div><div class="line">    public static void main(String[] args) &#123;</div><div class="line">        SpringApplication.run(Application.class, args);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="d-在application-yml文件中添加仓库等配置信息"><a href="#d-在application-yml文件中添加仓库等配置信息" class="headerlink" title="d.在application.yml文件中添加仓库等配置信息"></a>d.在application.yml文件中添加仓库等配置信息</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">server:</div><div class="line">  port: 8888</div><div class="line">spring:</div><div class="line">  cloud:</div><div class="line">    config:</div><div class="line">      server:</div><div class="line">        git:</div><div class="line">          uri: http://git.oschina.net/harryV/cloud-config-repo#file://前缀设置本地文件地址</div><div class="line">          clone-on-start: true</div></pre></td></tr></table></figure>
<p>通过这4个步骤之后，启动应用，一个分布式的配置中心就搭建完成了。</p>
<h2 id="3-配置规则解释"><a href="#3-配置规则解释" class="headerlink" title="3.配置规则解释"></a>3.配置规则解释</h2><p>url与配置文件的映射关系：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">/&#123;application&#125;/&#123;profile&#125;[/&#123;label&#125;]</div><div class="line">/&#123;application&#125;-&#123;profile&#125;.yml</div><div class="line">/&#123;label&#125;/&#123;application&#125;-&#123;profile&#125;.yml</div><div class="line">/&#123;application&#125;-&#123;profile&#125;.properties</div><div class="line">/&#123;label&#125;/&#123;application&#125;-&#123;profile&#125;.properties</div></pre></td></tr></table></figure>
<h2 id="4-客户端使用"><a href="#4-客户端使用" class="headerlink" title="4.客户端使用"></a>4.客户端使用</h2><h3 id="a-创建子工程spring-cloud-config-client"><a href="#a-创建子工程spring-cloud-config-client" class="headerlink" title="a. 创建子工程spring-cloud-config-client"></a>a. 创建子工程spring-cloud-config-client</h3><h3 id="b-在子工程的build-gradle文件中加入依赖：-1"><a href="#b-在子工程的build-gradle文件中加入依赖：-1" class="headerlink" title="b.在子工程的build.gradle文件中加入依赖："></a>b.在子工程的build.gradle文件中加入依赖：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">dependencies &#123;</div><div class="line">    compile &apos;org.springframework.boot:spring-boot-starter-web&apos;</div><div class="line">    compile &apos;org.springframework.boot:spring-boot-starter-actuator&apos;</div><div class="line">    compile &apos;org.springframework.cloud:spring-cloud-config-client&apos;</div><div class="line">    compile &apos;org.springframework.cloud:spring-cloud-starter-config&apos;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="c-创建启动主类-1"><a href="#c-创建启动主类-1" class="headerlink" title="c.创建启动主类"></a>c.创建启动主类</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">@EnableAutoConfiguration</div><div class="line">@ComponentScan</div><div class="line">@RestController</div><div class="line">@RefreshScope</div><div class="line">public class Application &#123;</div><div class="line"></div><div class="line">    @Value(&quot;$&#123;name:World!&#125;&quot;)</div><div class="line">    String name;</div><div class="line"></div><div class="line">    @RequestMapping(&quot;/&quot;)</div><div class="line">    public String home() &#123;</div><div class="line">        return &quot;Hello &quot; + name;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    public static void main(String[] args) &#123;</div><div class="line">        SpringApplication.run(Application.class, args);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="d-在application-yml文件中添加仓库等配置信息-1"><a href="#d-在application-yml文件中添加仓库等配置信息-1" class="headerlink" title="d.在application.yml文件中添加仓库等配置信息"></a>d.在application.yml文件中添加仓库等配置信息</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">server:</div><div class="line">  port: 7777</div><div class="line"></div><div class="line">spring:</div><div class="line">  application:</div><div class="line">    name: cloud</div><div class="line">  cloud:</div><div class="line">    config:</div><div class="line">      profile: config-dev</div><div class="line">      label: master</div><div class="line">      uri: http://localhost:8888</div><div class="line">      env: default</div></pre></td></tr></table></figure>
<p><a href="http://git.oschina.net/harryV/cloud-config-repo/blob/master/cloud-config-dev.yml" target="_blank" rel="external">http://git.oschina.net/harryV/cloud-config-repo/blob/master/cloud-config-dev.yml</a> 文件配置如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">spring:</div><div class="line">    datasource:</div><div class="line">      url: jdbc:mysql://192.168.1.240:3306/carzone_crm?useUnicode=true&amp;amp;characterEncoding=UTF-8</div><div class="line">      username: tmp</div><div class="line">      password: sfdde</div><div class="line">name: 李喆</div></pre></td></tr></table></figure>
<p>在浏览器输入<a href="http://localhost:7777/" target="_blank" rel="external">http://localhost:7777/</a> ，结果如下图所示：<br><img src="https://raw.githubusercontent.com/harryV361/harryv361.github.io/master/img/2.png" alt="image"></p>
<h2 id="规则详解"><a href="#规则详解" class="headerlink" title="规则详解"></a>规则详解</h2><h3 id="Git仓库配置"><a href="#Git仓库配置" class="headerlink" title="Git仓库配置"></a>Git仓库配置</h3><h4 id="访问http-localhost-8888-spring-cloud-service-dev，得到信息"><a href="#访问http-localhost-8888-spring-cloud-service-dev，得到信息" class="headerlink" title="访问http://localhost:8888/spring-cloud-service/dev，得到信息"></a>访问<a href="http://localhost:8888/spring-cloud-service/dev，得到信息" target="_blank" rel="external">http://localhost:8888/spring-cloud-service/dev，得到信息</a></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&#123;&quot;name&quot;:&quot;spring-cloud-service&quot;,&quot;profiles&quot;:</div><div class="line">[&quot;dev&quot;],&quot;label&quot;:&quot;master&quot;,</div><div class="line">&quot;version&quot;:&quot;139c3e90b8d7493f2258d68c2610b497ea136f6c&quot;,</div><div class="line">&quot;propertySources&quot;:[&#123;&quot;name&quot;:&quot;http://git.oschina.net/</div><div class="line">harryV/cloud-config-repo/spring-cloud-service-dev.yml&quot;,</div><div class="line">&quot;source&quot;:&#123;&quot;spring.datasource.url&quot;:&quot;jdbc:mysql:</div><div class="line">//192.168.1.240:3306/test?</div><div class="line">useUnicode=true&amp;amp;characterEncoding=UTF-8&quot;,</div><div class="line">&quot;spring.datasource.username&quot;:&quot;root&quot;,</div><div class="line">&quot;spring.datasource.password&quot;:&quot;root&quot;&#125;&#125;]&#125;</div></pre></td></tr></table></figure>
<p>version是git最后一次提交的版本号，<br>工程启动后，控制台输出如下的内容，代表工程启动的过程中会使用git的clone功能，将配置内容clone一份在本地。这样断网或者不能访问github时，也能够加载配置文件。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Adding property source:</div><div class="line">file:/var/folders/91/9dcdhz3170d31w3xc4c3t7j00000gn/T/</div><div class="line">config-repo-8950527188337464643/spring-cloud-service-dev.yml</div></pre></td></tr></table></figure>
<h4 id="file-前缀设置本地文件地址"><a href="#file-前缀设置本地文件地址" class="headerlink" title="file://前缀设置本地文件地址"></a>file://前缀设置本地文件地址</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">spring:</div><div class="line">  cloud:</div><div class="line">    config:</div><div class="line">      server:</div><div class="line">        git:</div><div class="line">          uri: file://$&#123;user.home&#125;/config-repo</div></pre></td></tr></table></figure>
<h4 id="占位符配置uri"><a href="#占位符配置uri" class="headerlink" title="占位符配置uri"></a>占位符配置uri</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">spring:</div><div class="line">  cloud:</div><div class="line">    config:</div><div class="line">      server:</div><div class="line">        git:</div><div class="line">          uri: http://git.oschina.net/harryV/&#123;application&#125;</div></pre></td></tr></table></figure>
<h4 id="配置多个仓库"><a href="#配置多个仓库" class="headerlink" title="配置多个仓库"></a>配置多个仓库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">server:</div><div class="line">  port: 8888</div><div class="line">spring:</div><div class="line">  cloud:</div><div class="line">    config:</div><div class="line">      server:</div><div class="line">        git:</div><div class="line">          uri: http://git.oschina.net/harryV/cloud-config-repo #默认的仓库，其他仓库没有匹配到时使用默认仓库</div><div class="line">          repos:</div><div class="line">            simple: https://github.com/simple/config-repo</div><div class="line">            special:</div><div class="line">              pattern: special*/dev*,*special*/dev*</div><div class="line">              uri: https://github.com/special/config-repo</div><div class="line">            local:</div><div class="line">              pattern: local*</div><div class="line">              uri: file:/home/configsvc/config-repo</div></pre></td></tr></table></figure>
<p>repo中的pattern属性实际上是一个数组，因此您可以使用属性文件中的YAML数组（或[0]，[1]等后缀）绑定到多个模式。如果要运行具有多个配置文件的应用程序，则可能需要执行此操作。例：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">spring:</div><div class="line">  cloud:</div><div class="line">    config:</div><div class="line">      server:</div><div class="line">        git:</div><div class="line">          uri: https://github.com/spring-cloud-samples/config-repo</div><div class="line">          repos:</div><div class="line">            development:</div><div class="line">              pattern:</div><div class="line">                - */development</div><div class="line">                - */staging</div><div class="line">              uri: https://github.com/development/config-repo</div><div class="line">            staging:</div><div class="line">              pattern:</div><div class="line">                - */qa</div><div class="line">                - */production</div><div class="line">              uri: https://github.com/staging/config-repo</div></pre></td></tr></table></figure>
<p>####配置子目录<br>每个存储库还可以选择将配置文件存储在子目录中，搜索这些目录的模式可以指定为searchPaths。例如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">spring:</div><div class="line">  cloud:</div><div class="line">    config:</div><div class="line">      server:</div><div class="line">        git:</div><div class="line">          uri: https://github.com/spring-cloud-samples/config-repo</div><div class="line">          searchPaths: foo,bar*</div></pre></td></tr></table></figure>
<p>####认证<br>分别添加“username”和“password”属性</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">spring:</div><div class="line">  cloud:</div><div class="line">    config:</div><div class="line">      server:</div><div class="line">        git:</div><div class="line">          uri: https://github.com/spring-cloud-samples/config-repo</div><div class="line">          username: harryV</div><div class="line">          password: 123456</div></pre></td></tr></table></figure>
<h3 id="SVN仓库配置"><a href="#SVN仓库配置" class="headerlink" title="SVN仓库配置"></a>SVN仓库配置</h3><h4 id="spring-cloud-config-server工程下的build-gradle文件添加依赖："><a href="#spring-cloud-config-server工程下的build-gradle文件添加依赖：" class="headerlink" title="spring-cloud-config-server工程下的build.gradle文件添加依赖："></a>spring-cloud-config-server工程下的build.gradle文件添加依赖：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">compile group: &apos;org.tmatesoft.svnkit&apos;, name: &apos;svnkit&apos;, version: &apos;1.8.14&apos;</div></pre></td></tr></table></figure>
<h4 id="然后在application-yml文件中指定svn文件"><a href="#然后在application-yml文件中指定svn文件" class="headerlink" title="然后在application.yml文件中指定svn文件"></a>然后在application.yml文件中指定svn文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">spring:</div><div class="line">  cloud:</div><div class="line">    config:</div><div class="line">      server:</div><div class="line">        svn:</div><div class="line">          uri: svn://xxxxxxxx</div></pre></td></tr></table></figure>
<h3 id="安全保护"><a href="#安全保护" class="headerlink" title="安全保护"></a>安全保护</h3><p>直接在配置中心引入spring security而不用做其他任何事，就能实现对配置中心访问的安全保护</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">compile &apos;org.springframework.boot:spring-boot-starter-security&apos;</div></pre></td></tr></table></figure>
<p>配置中心启动后，会在控制台打印出密码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Using default security password: 3b5af610-d886-4d49-ab0c-c49d8115dfa2</div></pre></td></tr></table></figure>
<p>或者不使用随机密码，可以配置：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">security:</div><div class="line">  user:</div><div class="line">    name: user</div><div class="line">    password: 3b5af610-d886-4d49-ab0c-c49d8115dfa2</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-简介：spring-cloud-config是一个分布式的配置中心，集中的来管理所有环境的配置文件，默认使用git来存储，也可以支持svn、本地文件等方式。它分为两个部分：server和client&quot;&gt;&lt;a href=&quot;#1-简介：spring-cloud-c
    
    </summary>
    
    
      <category term="spring cloud" scheme="http://yoursite.com/tags/spring-cloud/"/>
    
      <category term="spring cloud config" scheme="http://yoursite.com/tags/spring-cloud-config/"/>
    
  </entry>
  
  <entry>
    <title>spring cloud eureka</title>
    <link href="http://yoursite.com/2017/06/04/spring%20cloud%20eureka/"/>
    <id>http://yoursite.com/2017/06/04/spring cloud eureka/</id>
    <published>2017-06-04T13:20:22.000Z</published>
    <updated>2017-06-28T14:27:49.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-简介：spring-cloud-eureka是spring-cloud-netflix微服务组件的一部分，主要负责微服务的服务治理功能。"><a href="#1-简介：spring-cloud-eureka是spring-cloud-netflix微服务组件的一部分，主要负责微服务的服务治理功能。" class="headerlink" title="1. 简介：spring cloud eureka是spring cloud netflix微服务组件的一部分，主要负责微服务的服务治理功能。"></a>1. 简介：spring cloud eureka是spring cloud netflix微服务组件的一部分，主要负责微服务的服务治理功能。</h2><h2 id="2-环境准备"><a href="#2-环境准备" class="headerlink" title="2. 环境准备"></a>2. 环境准备</h2><pre><code>* JDK: 1.8.0_101
* gradle: 3.3
</code></pre><h2 id="3-项目搭建"><a href="#3-项目搭建" class="headerlink" title="3. 项目搭建"></a>3. 项目搭建</h2><h3 id="1-搭建父工程"><a href="#1-搭建父工程" class="headerlink" title="1. 搭建父工程"></a>1. 搭建父工程</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mkdir spring-cloud</div><div class="line">cd spring-cloud</div><div class="line">gradle init</div></pre></td></tr></table></figure>
<h3 id="2-然后创建多模块"><a href="#2-然后创建多模块" class="headerlink" title="2. 然后创建多模块"></a>2. 然后创建多模块</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mkdir -p spring-cloud-eureka-server</div><div class="line">mkdir -p spring-cloud-eureka-client</div></pre></td></tr></table></figure>
<h3 id="3-修改gradle配置文件"><a href="#3-修改gradle配置文件" class="headerlink" title="3. 修改gradle配置文件"></a>3. 修改gradle配置文件</h3><p>修改根目录下的 settings.gradle 文件，引入子模块：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">include &apos;spring-cloud-eureka-server&apos;,&apos;spring-cloud-eureka-client&apos;</div></pre></td></tr></table></figure></p>
<h3 id="4-修改根目录下的-build-gradle-文件"><a href="#4-修改根目录下的-build-gradle-文件" class="headerlink" title="4. 修改根目录下的 build.gradle 文件"></a>4. 修改根目录下的 build.gradle 文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line">group &apos;com.lee&apos;</div><div class="line"></div><div class="line">buildscript &#123;</div><div class="line">    repositories &#123;</div><div class="line">        jcenter()</div><div class="line">        maven &#123; url &quot;http://repo.spring.io/snapshot&quot; &#125;</div><div class="line">        maven &#123; url &quot;http://repo.spring.io/milestone&quot; &#125;</div><div class="line">        maven &#123; url &quot;http://repo.spring.io/libs-snapshot-local&quot; &#125;</div><div class="line">    &#125;</div><div class="line">    dependencies &#123;</div><div class="line">        classpath(&quot;org.springframework.boot:spring-boot-gradle-plugin:1.4.3.RELEASE&quot;)</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">subprojects &#123;</div><div class="line"></div><div class="line">    apply plugin: &apos;java&apos;</div><div class="line">    apply plugin: &apos;spring-boot&apos;</div><div class="line">    apply plugin: &apos;idea&apos;</div><div class="line"></div><div class="line">    ext &#123;</div><div class="line">        name = &apos;spring-cloud&apos;</div><div class="line">        description = &apos;spring cloud example&apos;</div><div class="line">        version=&apos;0.0.1-SNAPSHOT&apos;</div><div class="line">        sourceEncoding=&apos;UTF-8&apos;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    repositories &#123;</div><div class="line">        mavenCentral()</div><div class="line">        jcenter()</div><div class="line">        maven &#123; url &quot;http://repo.spring.io/snapshot&quot; &#125;</div><div class="line">        maven &#123; url &quot;http://repo.spring.io/milestone&quot; &#125;</div><div class="line">        maven &#123; url &apos;https://repo.spring.io/release/&apos; &#125;</div><div class="line">        maven &#123; url &quot;http://repo.spring.io/libs-snapshot-local&quot; &#125;</div><div class="line">        maven &#123; url &quot;http://repo.spring.io/libs-milestone-local&quot; &#125;</div><div class="line">        maven &#123; url &quot;http://repo.spring.io/libs-release-local&quot; &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    dependencies &#123;</div><div class="line">        testCompile &apos;org.springframework.boot:spring-boot-starter-test&apos;</div><div class="line">        testCompile &quot;junit:junit&quot;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    dependencyManagement &#123;</div><div class="line">        imports &#123;</div><div class="line">            mavenBom &quot;org.springframework.cloud:spring-cloud-dependencies:Brixton.BUILD-SNAPSHOT&quot;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    task &quot;create-dirs&quot; &lt;&lt; &#123;</div><div class="line">        sourceSets*.java.srcDirs*.each &#123; it.mkdirs() &#125;</div><div class="line">        sourceSets*.resources.srcDirs*.each &#123; it.mkdirs() &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="5-在spring-cloud-eureka-server下添加build-gradle-文件"><a href="#5-在spring-cloud-eureka-server下添加build-gradle-文件" class="headerlink" title="5. 在spring-cloud-eureka-server下添加build.gradle 文件"></a>5. 在spring-cloud-eureka-server下添加build.gradle 文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd spring-cloud-eureka-server</div><div class="line">vi build.gradle</div></pre></td></tr></table></figure>
<p>build.gradle<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">dependencies &#123;</div><div class="line">    compile &apos;org.springframework.boot:spring-boot-starter-actuator&apos;</div><div class="line">    compile &apos;org.springframework.cloud:spring-cloud-starter-eureka-server&apos;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="6-在spring-cloud-eureka-client-gradle-文件"><a href="#6-在spring-cloud-eureka-client-gradle-文件" class="headerlink" title="6. 在spring-cloud-eureka-client.gradle 文件"></a>6. 在spring-cloud-eureka-client.gradle 文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd spring-cloud-eureka-client</div><div class="line">vi build.gradle</div></pre></td></tr></table></figure>
<p>build.gradle<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">dependencies &#123;</div><div class="line">    compile &apos;org.springframework.boot:spring-boot-starter-actuator&apos;</div><div class="line">    compile &apos;org.springframework.cloud:spring-cloud-starter-eureka&apos;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="7-在在spring-cloud目录下执行gradle-create-dirs命令，创建工程目录"><a href="#7-在在spring-cloud目录下执行gradle-create-dirs命令，创建工程目录" class="headerlink" title="7. 在在spring-cloud目录下执行gradle create-dirs命令，创建工程目录"></a>7. 在在spring-cloud目录下执行gradle create-dirs命令，创建工程目录</h3><h3 id="8-通过-EnableEurekaServer启动一个服务注册中心提供给其他应用会话"><a href="#8-通过-EnableEurekaServer启动一个服务注册中心提供给其他应用会话" class="headerlink" title="8. 通过@EnableEurekaServer启动一个服务注册中心提供给其他应用会话"></a>8. 通过@EnableEurekaServer启动一个服务注册中心提供给其他应用会话</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">@EnableEurekaServer</div><div class="line">@SpringBootApplication</div><div class="line">public class EurekaServerApplication &#123;</div><div class="line">    public static void main(String[] args) &#123;</div><div class="line">        new SpringApplicationBuilder(EurekaServerApplication.class).web(true).run(args);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="9-配置文件"><a href="#9-配置文件" class="headerlink" title="9. 配置文件"></a>9. 配置文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">server:</div><div class="line">  port: 8761</div><div class="line">spring:</div><div class="line">  application:</div><div class="line">    name: eureka</div><div class="line">    cloud:</div><div class="line">        config:</div><div class="line">          uri: $&#123;CONFIG_SERVER_URL:http://localhost:8888&#125;</div><div class="line">eureka:</div><div class="line">  client:</div><div class="line">    registerWithEureka: false</div><div class="line">    fetchRegistry: false</div><div class="line">    serviceUrl:</div><div class="line">      defaultZone: http://localhost:8761/eureka/</div><div class="line">  instance:</div><div class="line">    hostname: localhost</div><div class="line">    metadataMap:</div><div class="line">      instanceId: $&#123;spring.application.name&#125;:$&#123;spring.application.instance_id:$&#123;random.value&#125;&#125;</div></pre></td></tr></table></figure>
<h3 id="10-启动应用后，访问http-localhost-8761"><a href="#10-启动应用后，访问http-localhost-8761" class="headerlink" title="10. 启动应用后，访问http://localhost:8761/"></a>10. 启动应用后，访问<a href="http://localhost:8761/" target="_blank" rel="external">http://localhost:8761/</a></h3><p><img src="https://raw.githubusercontent.com/harryV361/harryv361.github.io/master/img/1.png" alt="image"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-简介：spring-cloud-eureka是spring-cloud-netflix微服务组件的一部分，主要负责微服务的服务治理功能。&quot;&gt;&lt;a href=&quot;#1-简介：spring-cloud-eureka是spring-cloud-netflix微服务组件
    
    </summary>
    
    
      <category term="spring cloud" scheme="http://yoursite.com/tags/spring-cloud/"/>
    
      <category term="eureka" scheme="http://yoursite.com/tags/eureka/"/>
    
  </entry>
  
  <entry>
    <title>spring cloud概括</title>
    <link href="http://yoursite.com/2017/05/27/spring-cloud%E6%A6%82%E6%8B%AC/"/>
    <id>http://yoursite.com/2017/05/27/spring-cloud概括/</id>
    <published>2017-05-27T03:40:22.000Z</published>
    <updated>2017-05-27T05:32:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>Spring Cloud是基于Spring Boot实现的微服务框架，提供了配置管理、服务治理、断路器、智能路由、微代理、控制总线、全局锁、决策竞选、分布式会话、集群状态管理等功能。</p>
<p>Spring Cloud的子项目包括：</p>
<ul>
<li>Spring Cloud Config：分布式配置管理工具，支持git、svn、本地存储等方式远程管理配置文件。</li>
<li><p>Spring Cloud Netflix：核心组件，整合了多个Netflix开源套件。</p>
<ul>
<li>Eureka：服务治理组件，包含服务注册中心、服务注册和发现。</li>
<li>Hystrix：容错管理，实现了断路器模式，对延迟和故障提供容错功能。</li>
<li>Ribbon：为客户端提供负载均衡组件。</li>
<li>Feign：基于Hystrix和Ribbon的声明式服务调用组件。</li>
<li>Zuul：网管组件，提供动态路由、访问过滤等功能。</li>
<li><p>Archaius：外部API配置管理组件。</p>
<p>…</p>
</li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Spring Cloud是基于Spring Boot实现的微服务框架，提供了配置管理、服务治理、断路器、智能路由、微代理、控制总线、全局锁、决策竞选、分布式会话、集群状态管理等功能。&lt;/p&gt;
&lt;p&gt;Spring Cloud的子项目包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sprin
    
    </summary>
    
    
      <category term="spring cloud" scheme="http://yoursite.com/tags/spring-cloud/"/>
    
  </entry>
  
</feed>
